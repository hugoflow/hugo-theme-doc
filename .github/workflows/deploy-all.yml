name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Hugo and Pagefind
    runs-on: ubuntu-latest
    outputs:
      public-path: ${{ steps.upload.outputs.public-path }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: 'latest'
          extended: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pagefind
        run: npm install pagefind

      - name: Build site
        run: |
          hugo --minify
          npx pagefind --source public

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: public
          path: public

  deploy_firebase:
    name: Deploy to Firebase Hosting
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project source # <--- 添加这一步
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: public
          path: public

      - name: Install Firebase CLI
        run: npm install -g firebase-tools@14.5.1

      - name: Write Firebase service account key
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        run: echo "$FIREBASE_SERVICE_ACCOUNT" > "${{ github.workspace }}/firebase-key.json"

      - name: Deploy to Firebase Hosting
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/firebase-key.json
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        run: firebase deploy --only hosting --project "$FIREBASE_PROJECT_ID"

  
  # Vercel 部署
  deploy_vercel:
    name: Deploy to Vercel
    needs: build
    runs-on: ubuntu-latest
    # 设置环境变量，Vercel CLI 会优先使用它们
    env:
      # 从 secrets 中获取 Vercel 的相关信息
      # 注意：确保 secrets.DEPLOY_SECRETS_JSON 已经包含了 vercel 的相关信息

      VERCEL_TOKEN: ${{ fromJson(secrets.DEPLOY_SECRETS_JSON).vercel.vercel_token }}
      VERCEL_PROJECT_ID: ${{ fromJson(secrets.DEPLOY_SECRETS_JSON).vercel.vercel_projectId }}
      VERCEL_ORG_ID: ${{ fromJson(secrets.DEPLOY_SECRETS_JSON).vercel.vercel_orgId }}
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4 # 建议使用最新版 v4
        with:
          name: public # 假设你的构建产物名为 public
          path: public # 下载到 ./public 目录

      - name: Setup Node.js (for Vercel CLI)
        uses: actions/setup-node@v4
        with:
          node-version: '20' # 或者你需要的 Node.js 版本

      - name: Install Vercel CLI
        run: npm install --global vercel@latest # 安装最新版 Vercel CLI

      - name: Deploy to Vercel Production
        # Vercel CLI会自动使用 VERCEL_TOKEN, VERCEL_PROJECT_ID, VERCEL_ORG_ID 环境变量
        run: |
          echo "Deploying to Vercel Project: $VERCEL_PROJECT_ID under Org/User: $VERCEL_ORG_ID"

          vercel deploy --prod --yes ./public --token "$VERCEL_TOKEN" --scope "$VERCEL_ORG_ID"

